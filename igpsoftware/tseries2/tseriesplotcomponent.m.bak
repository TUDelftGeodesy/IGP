function hf=tseriesplotcomponent(stations,item,id,project,spacing)
%TSERIESPLOTCOMPONENT Plot timescomponents for multiple stations.
%   TSERIESPLOTCOMPONENT(TSERIES,ITEM,ID) plots the timeseries components
%   in the cell array ITEM for the stations in the structure array TSERIES.
%   ID is an optional identifier.
%
%   TSERIESPLOTCOMPONENT(STATIONS,ITEM,ID) plots the timeseries components
%   in the cell array ITEM for the stations in the cell array STATIONS. 
%   ID is the optional identifier of the fit (default '_fit'). The timeseries
%   data must be stored in an mat-file STATION_ID.mat (_ is part of the
%   ID).
%
%   TSERIESPLOTCOMPONENT(...,PROJECT,SPACING) provides additional project
%   name PROJECT and spacing SPACING between the individual lines. Default
%   for spacing is 10 ([10 10 10]).
%
%   Examples:
%      tseriesplotcomponent(tseries,'raw');
%      tseriesplotcomponent(stations,{'harmonic' 'tempi'},'_fit');
%      tseriesplotcomponent(stations,{'harmonic' 'tempi'},'_fit','Ameland',10);
%
%   (c) Hans van der Marel, Delft University of Technology, 2015-2016.

% Check arguments

if nargin < 2, error('too few arguments (specify at least stationames and item');end
if ~iscell(stations) && ~isstruct(stations)
    error('first argument must be a cell array with station names or a structure array of timeseries.') 
end
if nargin < 2
    item='raw';
end
item=cellstr(item);
if nargin < 3
    id='_fit';
end
if nargin < 4
   project='';
end
if nargin < 5
  spacing=10;
end
if isscalar(spacing)
  spacing=[spacing spacing spacing];
end

saveplots=false;

nstations=length(stations);          
level=1:nstations;

sylabel= { '\Delta N [mm]'  '\Delta E [mm]' '\Delta U [mm]' }; 
complabel= { 'North'  'East' 'Up' }; 

itemlist=item{1};
for k=2:length(item)
  itemlist=[ itemlist ' + ' item{k} ];
end
if ~isempty(id)
  titlestr=[ ' (' itemlist ', id=' id ')'];
else
  titlestr=[ ' (' itemlist ')'];
end

for k=1:length(item)
  %if strcmp(item{k},'raw')
  if ismember(item,{'raw' 'nostep'})
    item{k}='neu';
  else
    item{k}= [ 'neu' item{k} ];
  end
end

minyear=2999;
maxyear=0;

remjump=false;
%if ismember(item,{'raw' 'fit'})
if ismember(item,{'nostep' 'fit'})
  remjump=true;
end

for icomponent=1:3
  hf(icomponent)=figure;
  for i=1:nstations
    if iscell(stations)
       station=stations{i};
       load([ station id '.mat']);
    elseif isstruct(stations)
      tseries=stations(i);
      station=tseries.station;
    end
    if isfield(tseries,'year')
       year=tseries.year;
    else
       year=ymd2dyear(datevec(tseries.epoch));
    end
    data=tseries.(item{1});
    if remjump, data=data-tseries.neujumps; end
    for k=2:length(item)
       data=data+tseries.(item{k});
    end
    offset=level(i)*spacing(icomponent)-nanmean(data(:,icomponent))*1000;
    % insert NaN's at gaps
    idx=find(diff(year) > 1/360);
    n=length(idx);
    idx(n+1)=length(year);
    for k=n:-1:1
      year(idx(k)+k+1:idx(k+1)+k)=year(idx(k)+1:idx(k+1));
      data(idx(k)+k+1:idx(k+1)+k,:)=data(idx(k)+1:idx(k+1),:);
      year(idx(k)+k)=nan;
      data(idx(k)+k,:)=nan;
    end
    h=plot(year,data(:,icomponent)*1000+offset,'LineWidth',1);
    hcol=get(h,'Color');
    line([year(1) ;year(end)],[ level(i)*spacing(icomponent) ; level(i)*spacing(icomponent) ],'LineStyle',':','Color',hcol);
    hold all;
    % Plot symbol for events
    events=tseries.events;
    for k=1:numel(events)
       %ymark=level(i)*spacing(icomponent);
       ymark=interp1(year(~isnan(year)),data(~isnan(year),icomponent)*1000,events(k).year,'linear')+offset;
       switch events(k).type
         %case {'REC'}
         %   plot(events(k).year,ymark,'v','Color','y')
         case {'ANT'}
            %plot(events(k).year,ymark,'^','Color','r')
            text(events(k).year,ymark,'A','Color',hcol,'FontSize',9,'HorizontalAlignment','center','VerticalAlignment','top')
         case {'DPL','STEP'}
            %plot(events(k).year,ymark,'v','Color','k');
            text(events(k).year,ymark,'^','Interpreter','none','Color',hcol,'FontSize',14,'HorizontalAlignment','center','VerticalAlignment','top')
         %otherwise
         %   plot(events(k).year,ymark,'x','Color','g')
       end
    end 
    text(year(1),level(i)*spacing(icomponent),[ station ' '],'HorizontalAlignment','right') ;
    minyear=min(minyear,floor(4*min(year))/4);
    maxyear=max(maxyear,ceil(4*max(year))/4);
  end
  title([ project ' ' complabel{icomponent} ' ' titlestr],'Interpreter','none');
  ylabel(sylabel{icomponent});
  a=axis();
  a(1)=minyear-ceil(4*(maxyear-minyear)/15)/4;
  a(2)=maxyear;
  a(3)=max(min(a(3),0),-spacing(icomponent));
  a(4)=(nstations+1)*spacing(icomponent);
  axis(a);
  set(gca,'Ylim',[a(3) a(4)],'Ytick',[0:10:a(4)]);
  xlim=get(gca,'XLim');
  xtick=xlim(1):1/12:xlim(2);
  ticklength=get(gca,'TickLength');
  xticklabel=get(gca,'XTickLabel');
  if iscellstr(xticklabel)
     for k=1:size(xticklabel,1)
       xticklabel{k}=sprintf('%6.1f',str2num(xticklabel{k}));
     end
  elseif ischar(xticklabel)
     % fmt=sprintf('%%%d.%df',size(xticklabel,2),size(xticklabel,2)-5);
     fmt='%6.1f';
     for k=1:size(xticklabel,1)
       xticklabelc(k,:)=sprintf(fmt,str2num(xticklabel(k,:)));
     end
     xticklabel=xticklabelc;
  end
  set(gca,'XTickLabel',xticklabel);
  set(gca,'YMinorTick','on');
  cax1 = axes('Position', get(gca, 'Position'));
  cax2 = axes('Position', get(gca, 'Position'));
  set(cax1 ...
    ,'TickLength'       , ticklength/2 ...
    ,'YAxisLocation'    ,'left' ...
    ,'XAxisLocation'    , 'Top' ...
    ,'Box'              , 'off' ...
    ,'HitTest'          , 'off' ...
    ,'Box'              , 'off' ...
    ,'Color'            , 'none' ...
    ,'XTick'            , xtick ...
    ,'YTick'            , [] ...
    ,'XTickLabel'       , [] ...
    ,'XLim'             , xlim ...
    );
  set(cax2 ...
    ,'TickLength'       , ticklength/2 ...
    ,'YAxisLocation'    ,'left' ...
    ,'XAxisLocation'    , 'Bottom' ...
    ,'Box'              , 'off' ...
    ,'HitTest'          , 'off' ...
    ,'Box'              , 'off' ...
    ,'Color'            , 'none' ...
    ,'XTick'            , xtick ...
    ,'YTick'            , [] ...
    ,'XTickLabel'       , [] ...
    ,'XLim'             , xlim ...
    );
  
end

if saveplots
  plotdir='plots';
  filename=['all_' strrep(itemlist,' ','') id ]; 
  print(hf(1),'-dpng','-r300',fullfile(plotdir,[ filename '_lat.png']));
  print(hf(2),'-dpng','-r300',fullfile(plotdir,[ filename '_lon.png']));
  print(hf(3),'-dpng','-r300',fullfile(plotdir,[ filename '_hgt.png']));
end

end